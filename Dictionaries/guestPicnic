
# The nested dictionaries to print.
allGuests = {'Alice': {'apples': 5, 'pretzels': 12}
             'Bob': {'ham sandwitches': 3, 'apples': 2},
             'Carol': {'cups': 3, 'apple pies': 1}}
             
# Manual operations.
print(allGuests.values())
print(allGuests.values()[0])
print(allGuests.values()[1])
print(allGuests.values()[2])

# Print the key and its value in the nested dictionaries.
## That will print same keys twice, e.g. the key 'apples'.
## The program needs to sum values with the same key.

# Create a new dictionary.

# Take the key 'apples' and store its value in key variable.
# If the same key 'apples' exists elsewhere, add its value to the key variable.
# Print the key and the value. Or store it in a separate dictionary for later use.

# IN GENERAL:
# 0.) Create a separate dictionary for summing up values of the same keys.
# 1.) Iterate over the keys in nested dictionaries.
# 1.5.) Check, if the considered key already exists in the separate dictionary.
# 1.8.) If the key does exist, add the considered key's value to the existing one,
#       else insert the key-value pair to the separate dictionary.
# 2.) Use tuple unpacking in a for loop to neatly print the separate dictionary.
# 3.) 

# Creating a separate dictionary for summing up values of the same key.
itemsBrought = {}

# The following for loops iterate over all items brought (, over all keys in nested dictionary).
for allItems in allGuests.values():
  for item, quantity in allItems.item():
    itemsBrought.setdefault(item, quantity)
    if item in itemsBrought.keys():
      itemsBrought[item] += quantity
    else:
      
      
    


print('Number of things being brought:')
